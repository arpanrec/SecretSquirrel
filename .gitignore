# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

.idea

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
/.terraform.lock.hcl
data
/http-client.private.env.json
.vscode/*
.env
INIT_GPG_PRIVATE_KEY
INIT_GPG_PRIVATE_KEY_PASSWORD
INIT_OPENSSL_ROOT_CA_CERT
INIT_OPENSSL_ROOT_CA_KEY
INIT_OPENSSL_ROOT_CA_KEY_PASSWORD
INIT_VAULT_SVC_ADMIN_CREDENTIAL
OFFSHORE_STORAGE_CREDENTIAL
OFFSHORE_STORAGE_REMOTE
create_environment_file_and_new_root_ca_certs.sh
INIT_GPG_KEY_PASSWD
INIT_OPENSSL_ROOT_CA_PASSWORD
INIT_OPENSSL_ROOT_CA_NO_PASSWORD_KEY
create_environment.sh
main
INIT_EMAIL_ID
INIT_GPG_PRIVATE_KEY_CONTENT
INIT_GPG_PRIVATE_KEY_FINGERPRINT
INIT_OPENSSL_ROOT_CA_CERT_CONTENT
INIT_OPENSSL_ROOT_CA_KEY_CONTENT
secureserver
